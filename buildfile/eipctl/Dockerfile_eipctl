# Build the manager binary
FROM golang:1.20 as builder
ARG TARGETOS
ARG TARGETARCH
ENV GOPROXY=https://goproxy.io,direct

WORKDIR /workspace
# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

RUN ls /etc/apt/sources.list.d
RUN sed -i "s+http://deb.debian.org/debian+https://mirrors.tuna.tsinghua.edu.cn/debian+g" /etc/apt/sources.list.d/debian.sources
RUN apt update && apt install -y libpcap-dev

# Copy the go source
COPY cmd/eipctl/main.go cmd/main.go
COPY pkg/ pkg/

# Build
# the GOARCH has not a default value to allow the binary be built according to the host where the command
# was called. For example, if we call make docker-build in a local env which has the Apple Silicon M1 SO
# the docker BUILDPLATFORM arg will be linux/arm64 when for Apple x86 it will be linux/amd64. Therefore,
# by leaving it empty we can ensure that the container and binary shipped on it will have the same platform.
RUN CGO_ENABLED=1 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} go build -a -o eipctl cmd/main.go

# Use distroless as minimal base image to package the manager binary
# Refer to https://github.com/GoogleContainerTools/distroless for more details
FROM docker.nju.edu.cn/alpine:latest
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories
RUN apk add --no-cache libpcap-dev libbpf-dev libc6-compat ipset iptables
RUN ln -s /usr/lib/libpcap.so.1 /usr/lib/libpcap.so.0.8

WORKDIR /
COPY --from=builder /workspace/eipctl .
COPY --chmod=777 buildfile/agent/entrypoint.sh .
USER root
